include snippets/http-{{ php_base_name }}.*.conf;

upstream {{ php_base_name }} {
{% if php_create_pool %}
    server unix:{{ php_pool_socket_path|mandatory }};
{% else %}
    server unix:{{ php_fpm_socket_path|mandatory }};
{% endif %}
}

{% for item in php_redirections %}
server {
    listen 80;
    listen 443 ssl;
    server_name {{ item }};

    {% if ssl_config_file.stat.exists -%}
    include {{ ssl_config_file.stat.path }};
    {%- endif %}
    return 301 $scheme://{{ php_domain_name }}$request_uri;
}
{% endfor %}

{% if php_limitreq_enabled %}
limit_req_zone $binary_remote_addr zone=limit_req_{{ php_base_name }}:10m  rate={{ php_limitreq_per_second }}r/s;
{% endif %}

{% if php_fastcgi_cache_enabled %}
fastcgi_cache_path {{ php_fastcgi_cache_storage_path }} levels=1:2 keys_zone=fastcgi_cache_{{ php_base_name }}:{{ php_fastcgi_cache_max_size_mb }}m inactive={{ php_fastcgi_cache_expiration_minutes }}m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
{% endif %}

server {
    {% if php_fastcgi_cache_enabled %}
    set $skip_cache 0;
    {% if php_fastcgi_cache_ignore_post_requests %}
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    {% endif %}
    {% for match in php_fastcgi_cache_ignored_uri_regex_matches %}
    if ($request_uri ~ {{ match }}) {
        set $skip_cache 1;
    }
    {% endfor %}
    {% endif %}

    {% if php_referer_hash_bucket_size is defined -%}
    referer_hash_bucket_size {{ php_referer_hash_bucket_size }};
    {%- endif %}

    {% if not php_ssl_only -%}
    listen 80;
    {%- endif %}
    {% if not nginx_support_http2 -%}
    listen 443 ssl ;
    {%- else %}
    listen 443 ssl http2;
    {%- endif %}

    server_name {{ php_domain_name }};

    {% if ssl_config_file.stat.exists -%}
    include {{ ssl_config_file.stat.path }};
    {%- else %}
    include snippets/snakeoil.conf;
    {%- endif %}

    root {{ php_site_root }};
    index {{ php_index_filename }};

    {% if php_disallow_robots %}
    include snippets/disallow_robots.conf;
    {% endif %}

    {% if acme_well_known_config_file.stat.exists -%}
    include snippets/acme_well_known.conf;
    {%- endif %}

    include snippets/php-fpm-{{ php_base_name }}.*.conf;

    {% if php_http_basic_auth_enabled %}
    auth_basic "{{ php_http_basic_auth_message }}";
    auth_basic_user_file {{ php_http_basic_auth_htpasswd_path }};
    {% endif %}

    {% if include_default_location_block -%}
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        fastcgi_pass {{ php_base_name }};
        fastcgi_index {{ php_index_filename }};
        {% for item in php_fastcgi_param %}
        fastcgi_param {{ item }};
        {% endfor %}
        {{ php_fastcgi_nginx_include }}
        {% if php_fastcgi_cache_enabled %}
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache fastcgi_cache_{{ php_base_name }};
        fastcgi_cache_valid {{ php_fastcgi_cache_expiration_minutes }}m;
        {% endif %}
        {% if php_limitreq_enabled %}
        limit_req zone=limit_req_{{ php_base_name }} burst={{ php_limitreq_per_second }} nodelay;
        limit_req_log_level error;
        limit_req_status 429;
        {% endif %}
    }
    {% endif %}
}

{% if php_fastcgi_cache_enabled %}
server {
    listen 127.0.0.1:80;
    server_name {{ php_base_name }}.purge.cache.fastcgi.nginx.local;
    location / {
        include fastcgi.conf;
        fastcgi_pass unix:{{ php_fpm_socket_path|mandatory }};
        fastcgi_param SCRIPT_FILENAME {{ php_fastcgi_cache_purge_script_path }};
    }
}
{% endif %}
